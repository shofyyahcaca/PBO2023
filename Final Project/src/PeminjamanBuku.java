/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package perpustakaan;

import com.toedter.calendar.JDateChooser;
import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.persistence.TypedQuery;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Root;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.Timer;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author SHOFYYAH
 */
public class PeminjamanBuku extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
        private Timer refreshTimer;

    public PeminjamanBuku() {
        try {
            dataBuku = new ArrayList<>();
            initComponents();
            Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/ProjectUAS", "postgres", "1234");
            tampil();

            // Membuat dan mengatur timer untuk auto-refresh setiap 5 detik (5000 milidetik)
            refreshTimer = new Timer(5000, new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    tampil();
                }
                });
                refreshTimer.start();
        } catch (SQLException ex) {
            Logger.getLogger(PeminjamanBuku.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void peringatan(String pesan) {
        JOptionPane.showMessageDialog(rootPane, pesan);
    }
    ArrayList<DataBuku> dataBuku;

    private void tampil() {
        dataBuku.clear();
            EntityManager entityManager = Persistence.createEntityManagerFactory("UASPU").createEntityManager();
            entityManager.getTransaction().begin();
            TypedQuery<Peminjaman> querySelectAll = entityManager.createNamedQuery("Peminjaman.findAll", Peminjaman.class);
            List<Peminjaman> results = querySelectAll.getResultList();
            
                DefaultTableModel model = (DefaultTableModel) jTableDataPeminjaman.getModel();
                model.setRowCount(0);
                for (Peminjaman data : results) {

                    Object[] baris = new Object[9];
                    baris[0] = data.getId_peminjaman();
                    baris[1] = data.getNama_peminjam();
                    baris[2] = data.getKategori();
                    baris[3] = data.getNim();
                    baris[4] = data.getSemester();
                    baris[5] = data.getProdi();
                    baris[6] = data.getStatus();
                    baris[7] = data.getTanggal_peminjaman();
                    baris[8] = data.getTanggal_pengembalian();
                    
                    
                    model.addRow(baris);
                }
                entityManager.getTransaction().commit();
                entityManager.close();

            }
        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBoxStatus = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabelwelcomme = new javax.swing.JLabel();
        jComboBoxKategori = new javax.swing.JComboBox<>();
        jTextFieldSearching = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabelwelcomme1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButtonCetak = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jLabelPengembalian = new javax.swing.JLabel();
        jTextFieldTanggalPengembalian = new javax.swing.JTextField();
        jLabelProdi = new javax.swing.JLabel();
        jTextFieldProdi = new javax.swing.JTextField();
        jTextFieldSemester = new javax.swing.JTextField();
        jLabelSemester = new javax.swing.JLabel();
        jTextFieldidPeminjaman = new javax.swing.JTextField();
        jLabelNamaPeminjam = new javax.swing.JLabel();
        jTextFieldNamaPeminjam = new javax.swing.JTextField();
        jLabelNIM = new javax.swing.JLabel();
        jTextFieldNIM = new javax.swing.JTextField();
        jLabelKategori = new javax.swing.JLabel();
        jTextFieldKategori = new javax.swing.JTextField();
        jLabelTanggalPeminjaman = new javax.swing.JLabel();
        jTextFieldTanggalPeminjaman = new javax.swing.JTextField();
        jButtonSimpan = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableDataPeminjaman = new javax.swing.JTable();
        jLabelStatus = new javax.swing.JLabel();
        jLabelidPeminjaman = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        bg = new javax.swing.JLabel();

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jComboBoxStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dipinjam", "Sudah Kembali" }));
        jComboBoxStatus.setBorder(null);
        getContentPane().add(jComboBoxStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 302, 140, 30));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 122, 153));
        jLabel2.setText("PEMINJAMAN");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 430, 110, -1));

        jLabelwelcomme.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabelwelcomme.setForeground(new java.awt.Color(6, 128, 153));
        jLabelwelcomme.setText("Buku & Skripsi UINSA");
        getContentPane().add(jLabelwelcomme, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, 260, -1));

        jComboBoxKategori.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID Peminjaman", "Nama Peminjam", "Kategori", "NIM", "Semester", "Prodi", "Fakultas", "Tanggal Peminjaman", "Tanggal Pengembalian", "Jumlah Buku", " " }));
        jComboBoxKategori.setBorder(null);
        jComboBoxKategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxKategoriActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBoxKategori, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 130, 120, 30));

        jTextFieldSearching.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 107, 153), null));
        jTextFieldSearching.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSearchingActionPerformed(evt);
            }
        });
        jTextFieldSearching.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSearchingKeyReleased(evt);
            }
        });
        getContentPane().add(jTextFieldSearching, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 130, 200, 30));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("SHORT BY");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 140, 60, -1));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 130, 170, 30));

        jLabelwelcomme1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabelwelcomme1.setForeground(new java.awt.Color(6, 128, 153));
        jLabelwelcomme1.setText("PEMINJAMAN");
        getContentPane().add(jLabelwelcomme1, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 20, 260, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("CARI");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 140, 30, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("DATA BUKU");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, 100, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("DATA SKRIPSI");
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 280, 110, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("LAPORAN DATA BUKU");
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 330, 160, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("LAPORAN DATA SKRIPSI");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 380, 170, 20));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1290, 90));

        jButtonCetak.setBackground(new java.awt.Color(25, 133, 167));
        jButtonCetak.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonCetak.setForeground(new java.awt.Color(255, 255, 255));
        jButtonCetak.setText("CETAK");
        jButtonCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCetakActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonCetak, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 500, 130, 40));

        jButtonDelete.setBackground(new java.awt.Color(25, 133, 167));
        jButtonDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonDelete.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDelete.setText("DELETE");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 500, 130, 40));

        jLabelPengembalian.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelPengembalian.setForeground(new java.awt.Color(1, 143, 158));
        jLabelPengembalian.setText("Tanggal Pengembalian");
        getContentPane().add(jLabelPengembalian, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 400, 160, -1));

        jTextFieldTanggalPengembalian.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(4, 123, 153), null));
        jTextFieldTanggalPengembalian.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldTanggalPengembalianMouseClicked(evt);
            }
        });
        jTextFieldTanggalPengembalian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTanggalPengembalianActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldTanggalPengembalian, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 400, 200, 30));

        jLabelProdi.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelProdi.setForeground(new java.awt.Color(1, 143, 158));
        jLabelProdi.setText("Prodi");
        getContentPane().add(jLabelProdi, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 250, 40, -1));

        jTextFieldProdi.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(4, 123, 153), null));
        jTextFieldProdi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldProdiActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldProdi, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 250, 200, 30));

        jTextFieldSemester.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(4, 123, 153), null));
        jTextFieldSemester.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSemesterActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldSemester, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 450, 200, 30));

        jLabelSemester.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelSemester.setForeground(new java.awt.Color(1, 143, 158));
        jLabelSemester.setText("Semester");
        getContentPane().add(jLabelSemester, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 450, 70, -1));

        jTextFieldidPeminjaman.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(4, 123, 153), null));
        jTextFieldidPeminjaman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldidPeminjamanActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldidPeminjaman, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 250, 200, 30));

        jLabelNamaPeminjam.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelNamaPeminjam.setForeground(new java.awt.Color(1, 143, 158));
        jLabelNamaPeminjam.setText("Nama Peminjam");
        getContentPane().add(jLabelNamaPeminjam, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 300, 120, -1));

        jTextFieldNamaPeminjam.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(4, 123, 153), null));
        jTextFieldNamaPeminjam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNamaPeminjamActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldNamaPeminjam, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 300, 200, 30));

        jLabelNIM.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelNIM.setForeground(new java.awt.Color(1, 143, 158));
        jLabelNIM.setText("NIM");
        getContentPane().add(jLabelNIM, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 400, 40, -1));

        jTextFieldNIM.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(4, 123, 153), null));
        jTextFieldNIM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNIMActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldNIM, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 400, 200, 30));

        jLabelKategori.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelKategori.setForeground(new java.awt.Color(1, 143, 158));
        jLabelKategori.setText("Kategori");
        getContentPane().add(jLabelKategori, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 350, 60, -1));

        jTextFieldKategori.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(4, 123, 153), null));
        jTextFieldKategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldKategoriActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldKategori, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 350, 200, 30));

        jLabelTanggalPeminjaman.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelTanggalPeminjaman.setForeground(new java.awt.Color(1, 143, 158));
        jLabelTanggalPeminjaman.setText("Tanggal Peminjaman");
        getContentPane().add(jLabelTanggalPeminjaman, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 350, 150, -1));

        jTextFieldTanggalPeminjaman.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(4, 123, 153), null));
        jTextFieldTanggalPeminjaman.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldTanggalPeminjamanMouseClicked(evt);
            }
        });
        jTextFieldTanggalPeminjaman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTanggalPeminjamanActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldTanggalPeminjaman, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 350, 200, 30));

        jButtonSimpan.setBackground(new java.awt.Color(25, 133, 167));
        jButtonSimpan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonSimpan.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSimpan.setText("SIMPAN");
        jButtonSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSimpanActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSimpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 500, 130, 40));

        jButtonUpdate.setBackground(new java.awt.Color(25, 133, 167));
        jButtonUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonUpdate.setForeground(new java.awt.Color(255, 255, 255));
        jButtonUpdate.setText("UPDATE");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 500, 130, 40));

        jTableDataPeminjaman.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID Peminjaman", "Nama Peminjam", "Kategori", "NIM", "Semester", "Prodi", "Status", "Tanggal Peminjaman", "Tanggal Pengembalian"
            }
        ));
        jTableDataPeminjaman.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableDataPeminjamanMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableDataPeminjaman);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 570, 740, 170));

        jLabelStatus.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelStatus.setForeground(new java.awt.Color(1, 143, 158));
        jLabelStatus.setText("Status");
        getContentPane().add(jLabelStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 300, 50, 30));

        jLabelidPeminjaman.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelidPeminjaman.setForeground(new java.awt.Color(1, 143, 158));
        jLabelidPeminjaman.setText("ID Peminjaman");
        getContentPane().add(jLabelidPeminjaman, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 250, 110, -1));

        jLabel9.setIcon(new javax.swing.ImageIcon("C:\\Users\\SHOFYYAH\\Downloads\\1ac.png")); // NOI18N
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, -1, -1));

        bg.setIcon(new javax.swing.ImageIcon("C:\\Users\\SHOFYYAH\\Downloads\\1a.png")); // NOI18N
        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, 60));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void jTextFieldSearchingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSearchingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSearchingActionPerformed

    private void jTextFieldSearchingKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchingKeyReleased
        // TODO add your handling code here:
        try {
            String selection = (String) jComboBoxKategori.getSelectedItem();
            String searchTerm = jTextFieldSearching.getText().trim();

            // Building the JPA query dynamically based on the selected criteria
            String queryString = "SELECT p FROM Peminjaman p WHERE ";

            switch (selection) {
                case "ID Peminjaman":
                    queryString += "LOWER(p.idPeminjaman) LIKE LOWER(:searchTerm)";
                    break;
                case "Nama Peminjam":
                    queryString += "LOWER(p.namaPeminjam) LIKE LOWER(:searchTerm)";
                    break;
                case "Kategori":
                    queryString += "LOWER(p.kategori) LIKE LOWER(:searchTerm)";
                    break;
                case "NIM":
                    queryString += "LOWER(p.nim) LIKE LOWER(:searchTerm)";
                    break;
                case "Semester":
                    queryString += "LOWER(p.semester) LIKE LOWER(:searchTerm)";
                    break;
                case "Prodi":
                    queryString += "LOWER(p.prodi) LIKE LOWER(:searchTerm)";
                    break;
                case "Status":
                    queryString += "LOWER(p.status) LIKE LOWER(:searchTerm)";
                    break;
                case "Tanggal Peminjaman":
                    queryString += "LOWER(p.tanggalPeminjaman) LIKE LOWER(:searchTerm)";
                    break;
                case "Tanggal Pengembalian":
                    queryString += "LOWER(p.tanggalPengembalian) LIKE LOWER(:searchTerm)";
                    break;
                default:
                    throw new IllegalArgumentException("No search criteria selected.");
            }

            // Create and execute the JPA query
            EntityManager em = null;

            try {
                EntityManagerFactory emf = Persistence.createEntityManagerFactory("UASPU");
                em = emf.createEntityManager();

                TypedQuery<Peminjaman> query = em.createQuery(queryString, Peminjaman.class);
                query.setParameter("searchTerm", "%" + searchTerm + "%");

                List<Peminjaman> results = query.getResultList();

                DefaultTableModel dataModel = new DefaultTableModel();
 
                // Add columns to the model
                dataModel.addColumn("ID Peminjaman");
                dataModel.addColumn("Nama Peminjam");
                dataModel.addColumn("Kategori");
                dataModel.addColumn("NIM");
                dataModel.addColumn("Semester");
                dataModel.addColumn("Status");
                dataModel.addColumn("Tanggal Peminjaman");
                dataModel.addColumn("Tanggal Pengembalian");
                // ... tambahkan kolom lain sesuai kebutuhan

                // Add rows to the model
                for (Peminjaman result : results) {
                    Object[] rowData = {
                        result.getId_peminjaman(),
                        result.getNama_peminjam(),
                        result.getKategori(),
                        result.getNim(),
                        result.getSemester(),
                        result.getProdi(),
                        result.getStatus(),
                        result.getTanggal_peminjaman(),
                        result.getTanggal_pengembalian(),
                    };
                    dataModel.addRow(rowData);
                }

                // Set jTableBuku with the created model
                jTableDataPeminjaman.setModel(dataModel);

            } catch (IllegalArgumentException ex) {
                // Handle the case where no search criteria selected
                ex.printStackTrace();
            } catch (Exception ex) {
                // Handle other exceptions
                ex.printStackTrace();
            } finally {
                if (em != null && em.isOpen()) {
                    em.close();
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        
    }//GEN-LAST:event_jTextFieldSearchingKeyReleased

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // TODO add your handling code here:
                JFrame frame = new JFrame("Search Filter Example");

                frame.setLayout(new BorderLayout());

                JTextField searchField = new JTextField();
                JTextField textField2 = new JTextField();
                DefaultListModel<String> listModel = new DefaultListModel<>();
                JList<String> resultList = new JList<>(listModel);

                EntityManagerFactory factory = Persistence.createEntityManagerFactory("UASPU");
                EntityManager em = factory.createEntityManager();

                searchField.getDocument().addDocumentListener(new DocumentListener() {
                    @Override
                    public void insertUpdate(DocumentEvent e) {
                        performSearch();
                    }

                    @Override
                    public void removeUpdate(DocumentEvent e) {
                        performSearch();
                    }

                    @Override
                    public void changedUpdate(DocumentEvent e) {
                        performSearch();
                    }

                    private void performSearch() {
                        listModel.clear();
                        String searchText = searchField.getText();

                        try {
                            em.getTransaction().begin();
                            Query query = em.createQuery("SELECT k.namaKategori FROM Kategori k WHERE k.namaKategori LIKE :input");
                            query.setParameter("input", "%" + searchText + "%");

                            List<String> results = query.getResultList();
                            for (String result : results) {
                                listModel.addElement(result);
                            }
                            em.getTransaction().commit();
                        } catch (Exception ex) {
                            if (em.getTransaction().isActive()) {
                                em.getTransaction().rollback();
                            }
                            ex.printStackTrace();
                        }
                    }
                });

                resultList.addMouseListener(new MouseAdapter() {
                    @Override
                    public void mouseClicked(MouseEvent e) {
                        if (e.getClickCount() == 1) {
                            JList<String> list = (JList<String>) e.getSource();
                            if (list.getSelectedValue() != null) {
                                String selectedValue = list.getSelectedValue();
                                jTextField1.setText(selectedValue);
                            }
                        }
                    }
                });

                JScrollPane scrollPane = new JScrollPane(resultList);
                frame.add(searchField, BorderLayout.NORTH);
                frame.add(scrollPane, BorderLayout.CENTER);
                frame.add(textField2, BorderLayout.SOUTH);

                frame.setSize(300, 400);
                frame.setLocationRelativeTo(null);
                frame.setVisible(true);


            
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jButtonCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCetakActionPerformed
        // TODO add your handling code here:
        try {
            String reportPath = "src/perpustakaan/reportPeminjaman.jrxml";
            String selection = (String) jComboBoxKategori.getSelectedItem();
            String searchTerm = jTextFieldSearching.getText().trim();

            // Building the JPA query dynamically based on the selected criteria
            String queryString = "SELECT p FROM Peminjaman p WHERE ";

            switch (selection) {
                case "ID Peminjaman":
                    queryString += "LOWER(p.idPeminjaman) LIKE LOWER(:searchTerm)";
                    break;
                case "Nama Peminjam":
                    queryString += "LOWER(p.namaPeminjam) LIKE LOWER(:searchTerm)";
                    break;
                case "Kategori":
                    queryString += "LOWER(p.kategori) LIKE LOWER(:searchTerm)";
                    break;
                case "NIM":
                    queryString += "LOWER(p.nim) LIKE LOWER(:searchTerm)";
                    break;
                case "Semester":
                    queryString += "LOWER(p.semester) LIKE LOWER(:searchTerm)";
                    break;
                case "Prodi":
                    queryString += "LOWER(p.prodi) LIKE LOWER(:searchTerm)";
                    break;
                case "Status":
                    queryString += "LOWER(p.status) LIKE LOWER(:searchTerm)";
                    break;
                case "Tanggal Peminjaman":
                    queryString += "LOWER(p.tanggalPeminjaman) LIKE LOWER(:searchTerm)";
                    break;
                case "Tanggal Pengembalian":
                    queryString += "LOWER(p.tanggalPengembalian) LIKE LOWER(:searchTerm)";
                    break;
                default:
                throw new IllegalArgumentException("No search criteria selected.");
            }

            // Create and execute the JPA query
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("UASPU");
            EntityManager em = emf.createEntityManager();
            em.getTransaction().begin();

            CriteriaBuilder cb = em.getCriteriaBuilder();
            CriteriaQuery<Peminjaman> cq = cb.createQuery (Peminjaman.class);
            Root<Peminjaman> bok = cq.from(Peminjaman.class);
            cq.select(bok);

            // Check if WHERE clause is not empty
            if (queryString.endsWith(" WHERE ")) {
                throw new IllegalArgumentException("No search criteria selected.");
            }

            TypedQuery<Peminjaman> q = em.createQuery(cq);
            List<Peminjaman> list = q.getResultList();
            Query query = em.createQuery(queryString);
            query.setParameter("searchTerm", "%" + searchTerm + "%");

            List<Peminjaman> results = query.getResultList();
            Map<String,Object> parameter = new HashMap<>();
            parameter.put("querySearch", searchTerm);
            parameter.put("searchBy",selection);

            // Menyiapkan data untuk laporan
            List<Object[]> data = new ArrayList<>();
            for (Peminjaman result : results) {
                Object[] rowData = {
                    result.getId_peminjaman(),
                    result.getNama_peminjam(),
                    result.getKategori(),
                    result.getNim(),
                    result.getSemester(),
                    result.getProdi(),
                    result.getStatus(),
                    result.getTanggal_peminjaman(),
                    result.getTanggal_pengembalian(),
                };
                data.add(rowData);
            }
            em.getTransaction().commit();
            em.close();
            emf.close();

            // Membuat sumber data untuk JasperReports dari data hasil pencarian

            JRBeanCollectionDataSource dataSource = new JRBeanCollectionDataSource(results);

            // Memuat file desain laporan (*.jrxml)
            JasperReport jasperReport = JasperCompileManager.compileReport(reportPath);
            JasperPrint print = JasperFillManager.fillReport(jasperReport, parameter, dataSource);
            JasperViewer viewer = new JasperViewer(print, false);
            viewer.setVisible(true);

        } catch (JRException ex) {
            Logger.getLogger(PeminjamanBuku.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonCetakActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        String idPeminjaman = jTextFieldidPeminjaman.getText().trim();

        // awal persistence
        EntityManager entityManager = Persistence.createEntityManagerFactory("UASPU").createEntityManager();
        entityManager.getTransaction().begin();
        Peminjaman p = entityManager.find(Peminjaman.class, idPeminjaman);
        entityManager.remove(p);
        entityManager.getTransaction().commit();

        // awal persistence
        try {

            JOptionPane.showMessageDialog(null, "Delete Berhasil", "Sukses", JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception ex) {

            JOptionPane.showMessageDialog(null, "jTextFieldidPeminjaman" + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        jTextFieldidPeminjaman.setText("");
        jTextFieldNamaPeminjam.setText("");
        jTextFieldKategori.setText("");
        jTextFieldNIM.setText("");
        jTextFieldSemester.setText("");
        jTextFieldProdi.setText("");
        jTextFieldTanggalPeminjaman.setText("");
        jTextFieldTanggalPengembalian.setText("");

        DefaultTableModel model = (DefaultTableModel) jTableDataPeminjaman.getModel();
        model.setRowCount(0);
        tampil();
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jTextFieldTanggalPengembalianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTanggalPengembalianActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTanggalPengembalianActionPerformed

    private void jTextFieldProdiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldProdiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldProdiActionPerformed

    private void jTextFieldSemesterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSemesterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSemesterActionPerformed

    private void jTextFieldidPeminjamanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldidPeminjamanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldidPeminjamanActionPerformed

    private void jTextFieldNamaPeminjamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNamaPeminjamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNamaPeminjamActionPerformed

    private void jTextFieldNIMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNIMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNIMActionPerformed

    private void jTextFieldKategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldKategoriActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldKategoriActionPerformed

    private void jTextFieldTanggalPeminjamanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTanggalPeminjamanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTanggalPeminjamanActionPerformed

    private void jButtonSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSimpanActionPerformed
        // TODO add your handling code here:
        String IdPeminjaman = jTextFieldidPeminjaman.getText().trim();
        String NamaPeminjam = jTextFieldNamaPeminjam.getText();
        String Kategori = jTextFieldKategori.getText();
        String NIM = jTextFieldNIM.getText();
        String Semester = jTextFieldSemester.getText();
        String Prodi = jTextFieldProdi.getText();
        String TanggalPeminjaman = jTextFieldTanggalPeminjaman.getText();
        String TanggalPengembalian = jTextFieldTanggalPengembalian.getText();

        // awal persistence
        try {

            EntityManager entityManager = Persistence.createEntityManagerFactory("UASPU").createEntityManager();
            entityManager.getTransaction().begin();
            Peminjaman p = new Peminjaman();
            p.setIdPeminjaman(IdPeminjaman);
            p.setNamaPeminjam(NamaPeminjam);
            p.setKategori(Kategori);
            p.setNim(NIM);
            p.setSemester(Semester);
            p.setProdi(Prodi);
            p.setStatus(Prodi);
            p.setTanggalPeminjaman(TanggalPeminjaman);
            p.setTanggalPengembalian(TanggalPengembalian);
            entityManager.persist(p);
            entityManager.getTransaction().commit();

            entityManager.persist(p);
            //            entityManager.getTransaction().commit();

            JOptionPane.showMessageDialog(null, "Data berhasil disimpan.", "Sukses", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {

            JOptionPane.showMessageDialog(null, "Gagal menyimpan data: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        // akhir persistence
        jTextFieldidPeminjaman.setText("");
        jTextFieldNamaPeminjam.setText("");
        jTextFieldKategori.setText("");
        jTextFieldNIM.setText("");
        jTextFieldSemester.setText("");
        jTextFieldProdi.setText("");
        jTextFieldTanggalPeminjaman.setText("");
        jTextFieldTanggalPengembalian.setText("");
        DefaultTableModel model = (DefaultTableModel) jTableDataPeminjaman.getModel();
        model.setRowCount(0);
        tampil();

    }//GEN-LAST:event_jButtonSimpanActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        // TODO add your handling code here:
        String IdPeminjaman = jTextFieldidPeminjaman.getText().trim();
        String NamaPeminjam = jTextFieldNamaPeminjam.getText();
        String Kategori = jTextFieldKategori.getText();
        String NIM = jTextFieldNIM.getText();
        String Semester = jTextFieldSemester.getText();
        String Prodi = jTextFieldProdi.getText();
        String TanggalPeminjaman = jTextFieldTanggalPeminjaman.getText();
        String TanggalPengembalian = jTextFieldTanggalPengembalian.getText();
        // awal persistence
        try {

            EntityManager entityManager = Persistence.createEntityManagerFactory("UASPU").createEntityManager();
            entityManager.getTransaction().begin();
            Peminjaman p = entityManager.find(Peminjaman.class, IdPeminjaman);
            p.setIdPeminjaman(IdPeminjaman);
            p.setNamaPeminjam(NamaPeminjam);
            p.setKategori(Kategori);
            p.setNim(NIM);
            p.setSemester(Semester);
            p.setProdi(Prodi);
            p.setStatus(Prodi);
            p.setTanggalPeminjaman(TanggalPeminjaman);
            p.setTanggalPengembalian(TanggalPengembalian);
            entityManager.persist(p);
            entityManager.getTransaction().commit();

            JOptionPane.showMessageDialog(null, "Update Berhasil", "Sukses", JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception ex) {

            JOptionPane.showMessageDialog(null, "Update Gagal : " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        // akhir persistence
        jTextFieldidPeminjaman.setText("");
        jTextFieldNamaPeminjam.setText("");
        jTextFieldKategori.setText("");
        jTextFieldNIM.setText("");
        jTextFieldSemester.setText("");
        jTextFieldProdi.setText("");
        jTextFieldTanggalPeminjaman.setText("");
        jTextFieldTanggalPengembalian.setText("");

        DefaultTableModel model = (DefaultTableModel) jTableDataPeminjaman.getModel();
        model.setRowCount(0);
        tampil();

    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jTableDataPeminjamanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableDataPeminjamanMouseClicked
        // TODO add your handling code here:
        int baris = jTableDataPeminjaman.rowAtPoint(evt.getPoint());

        String IdPeminjaman = jTableDataPeminjaman.getValueAt(baris, 0).toString();
        jTextFieldidPeminjaman.setText(IdPeminjaman);

        String NamaPeminjam = jTableDataPeminjaman.getValueAt(baris, 1).toString();
        jTextFieldNamaPeminjam.setText(NamaPeminjam);
        
        String Kategori = jTableDataPeminjaman.getValueAt(baris, 2).toString();
        jTextFieldKategori.setText(Kategori);

        String NIM = jTableDataPeminjaman.getValueAt(baris, 3).toString();
        jTextFieldNIM.setText(NIM);

        String Semester = jTableDataPeminjaman.getValueAt(baris, 4).toString();
        jTextFieldSemester.setText(Semester);

        String Prodi = jTableDataPeminjaman.getValueAt(baris, 5).toString();
        jTextFieldProdi.setText(Prodi);

        String Status = jTableDataPeminjaman.getValueAt(baris, 6).toString();
        jComboBoxStatus.setActionCommand(Status);

        String TanggalPeminjaman = jTableDataPeminjaman.getValueAt(baris, 7).toString();
        jTextFieldTanggalPeminjaman.setText(TanggalPeminjaman);

        String TanggalPengembalian = jTableDataPeminjaman.getValueAt(baris, 8).toString();
        jTextFieldTanggalPengembalian.setText(TanggalPengembalian);


        //        new AddBuku().setVisible(true);
        //        this.dispose();
    }//GEN-LAST:event_jTableDataPeminjamanMouseClicked

    private void jComboBoxKategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxKategoriActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxKategoriActionPerformed

    private void jTextFieldTanggalPeminjamanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldTanggalPeminjamanMouseClicked
        // TODO add your handling code here:
        JFrame frame = new JFrame("Date Picker Example");
        frame.setSize(200, 100);

        JPanel panel = new JPanel();
        panel.setLayout(new FlowLayout());

        JDateChooser dateChooser = new JDateChooser();

// Menghapus editor dari JDateChooser agar tidak dapat diedit
        dateChooser.getDateEditor().setEnabled(false);

// Set format tanggal yang diinginkan pada JDateChooser
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        dateChooser.setDateFormatString("yyyy/MM/dd");

        dateChooser.addPropertyChangeListener(e -> {
            if ("date".equals(e.getPropertyName())) {
                Date selectedDate = dateChooser.getDate();
                if (selectedDate != null) {
                    String formattedDate = dateFormat.format(selectedDate);
                    dateChooser.setDate(selectedDate); // Menetapkan tanggal yang diformat kembali ke dateChooser
                    dateChooser.repaint(); // Memperbarui tampilan dateChooser
                    dateChooser.transferFocus(); // Pindah fokus dari dateChooser

                    // Set tanggal yang diformat ke j4
                    jTextFieldTanggalPeminjaman.setText(formattedDate);
                }
            }
        });

        panel.add(dateChooser);
        
        frame.add(panel);
        frame.setVisible(true);
        frame.setLocationRelativeTo(null);


    }//GEN-LAST:event_jTextFieldTanggalPeminjamanMouseClicked

    private void jTextFieldTanggalPengembalianMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldTanggalPengembalianMouseClicked
        // TODO add your handling code here:
        JFrame frame = new JFrame("Date Picker Example");
        frame.setSize(200, 100);

        JPanel panel = new JPanel();
        panel.setLayout(new FlowLayout());

        JDateChooser dateChooser = new JDateChooser();

// Menghapus editor dari JDateChooser agar tidak dapat diedit
        dateChooser.getDateEditor().setEnabled(false);

// Set format tanggal yang diinginkan pada JDateChooser
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        dateChooser.setDateFormatString("yyyy/MM/dd");

        dateChooser.addPropertyChangeListener(e -> {
            if ("date".equals(e.getPropertyName())) {
                Date selectedDate = dateChooser.getDate();
                if (selectedDate != null) {
                    String formattedDate = dateFormat.format(selectedDate);
                    dateChooser.setDate(selectedDate); // Menetapkan tanggal yang diformat kembali ke dateChooser
                    dateChooser.repaint(); // Memperbarui tampilan dateChooser
                    dateChooser.transferFocus(); // Pindah fokus dari dateChooser

                    // Set tanggal yang diformat ke j4
                    jTextFieldTanggalPengembalian.setText(formattedDate);
                }
            }
        });

        panel.add(dateChooser);
        
        frame.add(panel);
        frame.setVisible(true);
        frame.setLocationRelativeTo(null);

    }//GEN-LAST:event_jTextFieldTanggalPengembalianMouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        // TODO add your handling code here:
        new InputBuku().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:
        new InputSkripsi().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        new PeminjamanBuku().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:
        new LaporanDataBuku().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        // TODO add your handling code here:
        new LaporanDataSkripsi().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel8MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PeminjamanBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PeminjamanBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PeminjamanBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PeminjamanBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PeminjamanBuku().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bg;
    private javax.swing.JButton jButtonCetak;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonSimpan;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JComboBox<String> jComboBoxKategori;
    private javax.swing.JComboBox<String> jComboBoxStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelKategori;
    private javax.swing.JLabel jLabelNIM;
    private javax.swing.JLabel jLabelNamaPeminjam;
    private javax.swing.JLabel jLabelPengembalian;
    private javax.swing.JLabel jLabelProdi;
    private javax.swing.JLabel jLabelSemester;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JLabel jLabelTanggalPeminjaman;
    private javax.swing.JLabel jLabelidPeminjaman;
    private javax.swing.JLabel jLabelwelcomme;
    private javax.swing.JLabel jLabelwelcomme1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableDataPeminjaman;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextFieldKategori;
    private javax.swing.JTextField jTextFieldNIM;
    private javax.swing.JTextField jTextFieldNamaPeminjam;
    private javax.swing.JTextField jTextFieldProdi;
    private javax.swing.JTextField jTextFieldSearching;
    private javax.swing.JTextField jTextFieldSemester;
    private javax.swing.JTextField jTextFieldTanggalPeminjaman;
    private javax.swing.JTextField jTextFieldTanggalPengembalian;
    private javax.swing.JTextField jTextFieldidPeminjaman;
    // End of variables declaration//GEN-END:variables
}