/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package perpustakaan;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.persistence.TypedQuery;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Root;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.Timer;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author SHOFYYAH
 */
public class InputSkripsi extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
        private Timer refreshTimer;

    public InputSkripsi() {
        try {
            dataBuku = new ArrayList<>();
            initComponents();
            Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/ProjectUAS", "postgres", "1234");
            tampil();

            // Membuat dan mengatur timer untuk auto-refresh setiap 5 detik (5000 milidetik)
            refreshTimer = new Timer(5000, new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    tampil();
              }
                });
                refreshTimer.start();
        } catch (SQLException ex) {
            Logger.getLogger(InputSkripsi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void peringatan(String pesan) {
        JOptionPane.showMessageDialog(rootPane, pesan);
    }
    ArrayList<DataBuku> dataBuku;

    private void tampil() {
        dataBuku.clear();
            EntityManager entityManager = Persistence.createEntityManagerFactory("UASPU").createEntityManager();
            entityManager.getTransaction().begin();
            TypedQuery<Skripsi> querySelectAll = entityManager.createNamedQuery("Skripsi.findAll", Skripsi.class);
            List<Skripsi> results = querySelectAll.getResultList();
            
                DefaultTableModel model = (DefaultTableModel) jTableDataSkripsi.getModel();
                model.setRowCount(0);
                for (Skripsi data : results) {

                    Object[] baris = new Object[8];
                    baris[0] = data.getId_skripsi();
                    baris[1] = data.getJudul_skripsi();
                    baris[2] = data.getKategori();
                    baris[3] = data.getPenulis();
                    baris[4] = data.getProdi();
                    baris[5] = data.getTahun();
                    baris[6] = data.getPembimbing();
                    baris[7] = data.getJumlah_halaman();
                    
                    model.addRow(baris);
                }
                entityManager.getTransaction().commit();
                entityManager.close();

            }
        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabelwelcomme = new javax.swing.JLabel();
        bg = new javax.swing.JLabel();
        jComboBoxKategori = new javax.swing.JComboBox<>();
        jTextFieldSearching = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabelwelcomme1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButtonDelete = new javax.swing.JButton();
        jTextFieldIDSkripsi = new javax.swing.JTextField();
        jLabelIDSkripsi = new javax.swing.JLabel();
        jLabelKategori = new javax.swing.JLabel();
        jTextFieldKategori = new javax.swing.JTextField();
        jLabelPembimbing = new javax.swing.JLabel();
        jTextFieldPembimbing = new javax.swing.JTextField();
        jLabelTahun = new javax.swing.JLabel();
        jLabelPenulis = new javax.swing.JLabel();
        jTextFieldPenulis = new javax.swing.JTextField();
        jLabelJumlahHalaman = new javax.swing.JLabel();
        jTextFieldJumlahHalaman = new javax.swing.JTextField();
        jButtonSimpan = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableDataSkripsi = new javax.swing.JTable();
        jTextFieldTahun = new javax.swing.JTextField();
        jLabelJudulSkripsi = new javax.swing.JLabel();
        jTextFieldJudulSkripsi = new javax.swing.JTextField();
        jLabelProdi = new javax.swing.JLabel();
        jTextFieldProdi = new javax.swing.JTextField();
        jButtonCetak = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("PEMINJAMAN");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 430, 110, -1));

        jLabelwelcomme.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabelwelcomme.setForeground(new java.awt.Color(6, 128, 153));
        jLabelwelcomme.setText("Buku & Skripsi UINSA");
        getContentPane().add(jLabelwelcomme, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, 260, -1));

        bg.setIcon(new javax.swing.ImageIcon("C:\\Users\\SHOFYYAH\\Downloads\\1a.png")); // NOI18N
        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1, 60));

        jComboBoxKategori.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID Skripsi", "Judul Skripsi", "Kategori", "Penulis", "Prodi", "Fakultas", "Tahun", "Pembimbing", "Jumlah Halaman" }));
        jComboBoxKategori.setBorder(null);
        jComboBoxKategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxKategoriActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBoxKategori, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 130, 110, 30));

        jTextFieldSearching.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 107, 153), null));
        jTextFieldSearching.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSearchingActionPerformed(evt);
            }
        });
        jTextFieldSearching.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSearchingKeyReleased(evt);
            }
        });
        getContentPane().add(jTextFieldSearching, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 130, 200, 30));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("SHORT BY");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 140, 60, -1));

        jLabelwelcomme1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabelwelcomme1.setForeground(new java.awt.Color(6, 128, 153));
        jLabelwelcomme1.setText("SKRIPSI");
        getContentPane().add(jLabelwelcomme1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 20, 140, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("CARI");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 140, 30, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("DATA BUKU");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, 100, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(21, 131, 153));
        jLabel6.setText("DATA SKRIPSI");
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 280, 110, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("LAPORAN DATA BUKU");
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 330, 160, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("LAPORAN DATA SKRIPSI");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 380, 170, 20));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1290, 90));

        jButtonDelete.setBackground(new java.awt.Color(25, 133, 167));
        jButtonDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonDelete.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDelete.setText("DELETE");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 480, -1, 30));

        jTextFieldIDSkripsi.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(4, 123, 153), null));
        jTextFieldIDSkripsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIDSkripsiActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldIDSkripsi, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 260, 170, 30));

        jLabelIDSkripsi.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelIDSkripsi.setForeground(new java.awt.Color(1, 143, 158));
        jLabelIDSkripsi.setText("ID Skripsi");
        getContentPane().add(jLabelIDSkripsi, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 260, -1, -1));

        jLabelKategori.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelKategori.setForeground(new java.awt.Color(1, 143, 158));
        jLabelKategori.setText("Kategori");
        getContentPane().add(jLabelKategori, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 360, -1, -1));

        jTextFieldKategori.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(4, 123, 153), null));
        jTextFieldKategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldKategoriActionPerformed(evt);
            }
        });
        jTextFieldKategori.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldKategoriKeyTyped(evt);
            }
        });
        getContentPane().add(jTextFieldKategori, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 360, 170, 30));

        jLabelPembimbing.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelPembimbing.setForeground(new java.awt.Color(1, 143, 158));
        jLabelPembimbing.setText("Pembimbing");
        getContentPane().add(jLabelPembimbing, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 360, -1, -1));

        jTextFieldPembimbing.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(4, 123, 153), null));
        jTextFieldPembimbing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPembimbingActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldPembimbing, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 360, 170, 30));

        jLabelTahun.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelTahun.setForeground(new java.awt.Color(1, 143, 158));
        jLabelTahun.setText("Tahun");
        getContentPane().add(jLabelTahun, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 310, -1, -1));

        jLabelPenulis.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelPenulis.setForeground(new java.awt.Color(1, 143, 158));
        jLabelPenulis.setText("Penulis");
        getContentPane().add(jLabelPenulis, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 410, -1, 10));

        jTextFieldPenulis.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(4, 123, 153), null));
        jTextFieldPenulis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPenulisActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldPenulis, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 410, 170, 30));

        jLabelJumlahHalaman.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelJumlahHalaman.setForeground(new java.awt.Color(1, 143, 158));
        jLabelJumlahHalaman.setText("Jumlah Halaman");
        getContentPane().add(jLabelJumlahHalaman, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 410, -1, -1));

        jTextFieldJumlahHalaman.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(4, 123, 153), null));
        jTextFieldJumlahHalaman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldJumlahHalamanActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldJumlahHalaman, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 410, 170, 30));

        jButtonSimpan.setBackground(new java.awt.Color(25, 133, 167));
        jButtonSimpan.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonSimpan.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSimpan.setText("SIMPAN");
        jButtonSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSimpanActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSimpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 480, -1, 30));

        jButtonUpdate.setBackground(new java.awt.Color(25, 133, 167));
        jButtonUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonUpdate.setForeground(new java.awt.Color(255, 255, 255));
        jButtonUpdate.setText("UPDATE");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 480, -1, 30));

        jTableDataSkripsi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID Skripsi", "Judul Skripsi", "Kategori", "Penulis", "Prodi", "Tahun", "Pembimbing", "Jumlah Halaman"
            }
        ));
        jTableDataSkripsi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableDataSkripsiMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableDataSkripsi);
        if (jTableDataSkripsi.getColumnModel().getColumnCount() > 0) {
            jTableDataSkripsi.getColumnModel().getColumn(0).setResizable(false);
        }

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 550, 720, 200));

        jTextFieldTahun.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(4, 123, 153), null));
        jTextFieldTahun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTahunActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldTahun, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 310, 170, 30));

        jLabelJudulSkripsi.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelJudulSkripsi.setForeground(new java.awt.Color(1, 143, 158));
        jLabelJudulSkripsi.setText("Judul Skripsi");
        getContentPane().add(jLabelJudulSkripsi, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 310, -1, -1));

        jTextFieldJudulSkripsi.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(4, 123, 153), null));
        jTextFieldJudulSkripsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldJudulSkripsiActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldJudulSkripsi, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 310, 170, 30));

        jLabelProdi.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelProdi.setForeground(new java.awt.Color(1, 143, 158));
        jLabelProdi.setText("Prodi");
        getContentPane().add(jLabelProdi, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 260, -1, -1));

        jTextFieldProdi.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(4, 123, 153), null));
        jTextFieldProdi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldProdiActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldProdi, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 260, 170, 30));

        jButtonCetak.setBackground(new java.awt.Color(25, 133, 167));
        jButtonCetak.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonCetak.setForeground(new java.awt.Color(255, 255, 255));
        jButtonCetak.setText("CETAK");
        jButtonCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCetakActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonCetak, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 480, 90, 30));

        jLabel9.setIcon(new javax.swing.ImageIcon("C:\\Users\\SHOFYYAH\\Downloads\\1ac.png")); // NOI18N
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void jComboBoxKategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxKategoriActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxKategoriActionPerformed

    private void jTextFieldSearchingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSearchingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSearchingActionPerformed

    private void jTextFieldSearchingKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchingKeyReleased
        // TODO add your handling code here:
        try {
            String selection = (String) jComboBoxKategori.getSelectedItem();
            String searchTerm = jTextFieldSearching.getText().trim();

            // Building the JPA query dynamically based on the selected criteria
            String queryString = "SELECT s FROM Skripsi s WHERE ";

            switch (selection) {
                case "ID Skripsi":
                    queryString += "LOWER(s.idSkripsi) LIKE LOWER(:searchTerm)";
                    break;
                case "Judul Skripsi":
                    queryString += "LOWER(s.judulSkripsi) LIKE LOWER(:searchTerm)";
                    break;
                case "Kategori":
                    queryString += "LOWER(s.kategori) LIKE LOWER(:searchTerm)";
                    break;
                case "Penulis":
                    queryString += "LOWER(s.penulis) LIKE LOWER(:searchTerm)";
                    break;
                case "Prodi":
                    queryString += "LOWER(s.prodi) LIKE LOWER(:searchTerm)";
                    break;
                case "Tahun":
                    queryString += "LOWER(s.tahun) LIKE LOWER(:searchTerm)";
                    break;
                case "Pembimbing":
                    queryString += "LOWER(s.pembimbing) LIKE LOWER(:searchTerm)";
                    break;
                case "Jumlah Halaman":
                    queryString += "LOWER(s.jumlahHalaman) LIKE LOWER(:searchTerm)";
                    break;
                default:
                    throw new IllegalArgumentException("No search criteria selected.");
            }

            // Create and execute the JPA query
            EntityManager em = null;

            try {
                EntityManagerFactory emf = Persistence.createEntityManagerFactory("UASPU");
                em = emf.createEntityManager();

                TypedQuery<Skripsi> query = em.createQuery(queryString, Skripsi.class);
                query.setParameter("searchTerm", "%" + searchTerm + "%");

                List<Skripsi> results = query.getResultList();

                DefaultTableModel dataModel = new DefaultTableModel();

                // Add columns to the model
                dataModel.addColumn("ID Skripsi");
                dataModel.addColumn("Judul Skripsi");
                dataModel.addColumn("Kategori");
                dataModel.addColumn("Penulis");
                dataModel.addColumn("Prodi");
                dataModel.addColumn("Tahun");
                dataModel.addColumn("Pembimbing");
                dataModel.addColumn("Jumlah Halaman");
                // ... tambahkan kolom lain sesuai kebutuhan

                // Add rows to the model
                for (Skripsi result : results) {
                    Object[] rowData = {
                    result.getId_skripsi(),
                    result.getJudul_skripsi(),
                    result.getKategori(),
                    result.getPenulis(),
                    result.getProdi(),
                    result.getTahun(),
                    result.getPembimbing(),
                    result.getJumlah_halaman(),};
                    dataModel.addRow(rowData);
                }

                // Set jTableBuku with the created model
                jTableDataSkripsi.setModel(dataModel);

            } catch (IllegalArgumentException ex) {
                // Handle the case where no search criteria selected
                ex.printStackTrace();
            } catch (Exception ex) {
                // Handle other exceptions
                ex.printStackTrace();
            } finally {
                if (em != null && em.isOpen()) {
                    em.close();
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        
    }//GEN-LAST:event_jTextFieldSearchingKeyReleased

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        
        String IDSkripsi = jTextFieldIDSkripsi.getText().trim();

        // awal persistence
        EntityManager entityManager = Persistence.createEntityManagerFactory("UASPU").createEntityManager();
        entityManager.getTransaction().begin();
        Skripsi s = entityManager.find(Skripsi.class, IDSkripsi);
        entityManager.remove(s);
        entityManager.getTransaction().commit();
        
        try {
            
        JOptionPane.showMessageDialog(null, "Delete Berhasil", "Sukses", JOptionPane.INFORMATION_MESSAGE);
        
        } catch (Exception ex) {

            JOptionPane.showMessageDialog(null, "Delete Gagal : " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        jTextFieldIDSkripsi.setText("");
        jTextFieldJudulSkripsi.setText("");
        jTextFieldKategori.setText("");
        jTextFieldPenulis.setText("");
        jTextFieldProdi.setText("");
        jTextFieldTahun.setText("");
        jTextFieldPembimbing.setText("");
        jTextFieldJumlahHalaman.setText("");
        
        DefaultTableModel model = (DefaultTableModel) jTableDataSkripsi.getModel();
                model.setRowCount(0);
                tampil();

    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jTextFieldIDSkripsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIDSkripsiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIDSkripsiActionPerformed

    private void jTextFieldKategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldKategoriActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldKategoriActionPerformed

    private void jTextFieldPembimbingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPembimbingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPembimbingActionPerformed

    private void jTextFieldPenulisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPenulisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPenulisActionPerformed

    private void jTextFieldJumlahHalamanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldJumlahHalamanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldJumlahHalamanActionPerformed

    private void jButtonSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSimpanActionPerformed
        // TODO add your handling code here:
        String Id_Skripsi = jTextFieldIDSkripsi.getText().trim();
        String Judul_Skripsi = jTextFieldJudulSkripsi.getText();
        String Kategori = jTextFieldKategori.getText();
        String Penulis = jTextFieldPenulis.getText();
        String Prodi = jTextFieldProdi.getText();
        String Tahun = jTextFieldTahun.getText();
        String Pembimbing = jTextFieldPembimbing.getText();
        String JumlahHalaman = jTextFieldJumlahHalaman.getText();

        // awal persistence
        try {
            
            EntityManager entityManager = Persistence.createEntityManagerFactory("UASPU").createEntityManager();
            entityManager.getTransaction().begin();
            Skripsi s = new Skripsi();
            s.setIdSkripsi(Id_Skripsi);
            s.setJudulSkripsi(Judul_Skripsi);
            s.setKategori(Kategori);
            s.setPenulis(Penulis);
            s.setProdi(Prodi);
            s.setTahun(Tahun);
            s.setPembimbing(Pembimbing);
            s.setJumlahHalaman(JumlahHalaman);
            entityManager.persist(s);
            entityManager.getTransaction().commit();
            
            entityManager.persist(s);
        
        JOptionPane.showMessageDialog(null, "Data berhasil disimpan.", "Sukses", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {

            JOptionPane.showMessageDialog(null, "Gagal menyimpan data: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        // akhir persistence
        
        jTextFieldIDSkripsi.setText("");
        jTextFieldJudulSkripsi.setText("");
        jTextFieldKategori.setText("");
        jTextFieldPenulis.setText("");
        jTextFieldProdi.setText("");
        jTextFieldTahun.setText("");
        jTextFieldPembimbing.setText("");
        jTextFieldJumlahHalaman.setText("");
        
        DefaultTableModel model = (DefaultTableModel) jTableDataSkripsi.getModel();
                model.setRowCount(0);
                tampil();
    }//GEN-LAST:event_jButtonSimpanActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
         // TODO add your handling code here:
        String IdSkripsi = jTextFieldIDSkripsi.getText().trim();
        String JudulSkripsi = jTextFieldJudulSkripsi.getText();
        String Kategori = jTextFieldKategori.getText();
        String Penulis = jTextFieldPenulis.getText();
        String Prodi = jTextFieldProdi.getText();
        String Tahun = jTextFieldTahun.getText();
        String Pembimbing = jTextFieldPembimbing.getText();
        String JumlahHalaman = jTextFieldJumlahHalaman.getText();
        // awal persistence
        
        try {
            EntityManager entityManager = Persistence.createEntityManagerFactory("UASPU").createEntityManager();
            entityManager.getTransaction().begin();
            Skripsi s = entityManager.find(Skripsi.class, IdSkripsi);
            s.setKategori(Kategori);
            s.setIdSkripsi(IdSkripsi);
            s.setJudulSkripsi(JudulSkripsi);
            s.setPenulis(Penulis);
            s.setProdi(Prodi);
            s.setTahun(Tahun);
            s.setPembimbing(Pembimbing);
            s.setJumlahHalaman(JumlahHalaman);
            
            entityManager.persist(s);
            entityManager.getTransaction().commit();
        
            JOptionPane.showMessageDialog(null, "Update Berhasil.", "Sukses", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {

            JOptionPane.showMessageDialog(null, "Gagal Update Data: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        // akhir persistence
        jTextFieldIDSkripsi.setText("");
        jTextFieldJudulSkripsi.setText("");
        jTextFieldKategori.setText("");
        jTextFieldPenulis.setText("");
        jTextFieldProdi.setText("");
        jTextFieldTahun.setText("");
        jTextFieldPembimbing.setText("");
        jTextFieldJumlahHalaman.setText("");
        
        DefaultTableModel model = (DefaultTableModel) jTableDataSkripsi.getModel();
                model.setRowCount(0);
                tampil();
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jTextFieldTahunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTahunActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTahunActionPerformed

    private void jTextFieldJudulSkripsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldJudulSkripsiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldJudulSkripsiActionPerformed

    private void jTextFieldProdiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldProdiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldProdiActionPerformed

    private void jButtonCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCetakActionPerformed
        // TODO add your handling code here:
        try {
            String reportPath = "src/perpustakaan/reportSkripsi.jrxml";
            String selection = (String) jComboBoxKategori.getSelectedItem();
            String searchTerm = jTextFieldSearching.getText().trim();

            // Building the JPA query dynamically based on the selected criteria
            String queryString = "SELECT s FROM Skripsi s WHERE ";

            switch (selection) {
                case "ID Skripsi":
                    queryString += "LOWER(s.idSkripsi) LIKE LOWER(:searchTerm)";
                    break;
                case "Judul Skripsi":
                    queryString += "LOWER(s.judulSkripsi) LIKE LOWER(:searchTerm)";
                    break;
                case "Kategori":
                    queryString += "LOWER(s.kategori) LIKE LOWER(:searchTerm)";
                    break;
                case "Penulis":
                    queryString += "LOWER(s.penulis) LIKE LOWER(:searchTerm)";
                    break;
                case "Prodi":
                    queryString += "LOWER(s.prodi) LIKE LOWER(:searchTerm)";
                    break;
                case "Tahun":
                    queryString += "LOWER(s.tahun) LIKE LOWER(:searchTerm)";
                    break;
                case "Pembimbing":
                    queryString += "LOWER(s.pembimbing) LIKE LOWER(:searchTerm)";
                    break;
                case "Jumlah Halaman":
                    queryString += "LOWER(s.jumlahHalaman) LIKE LOWER(:searchTerm)";
                    break;
                default:
                    throw new IllegalArgumentException("No search criteria selected.");
            }

            // Create and execute the JPA query
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("UASPU");
            EntityManager em = emf.createEntityManager();
            em.getTransaction().begin();

            CriteriaBuilder cb = em.getCriteriaBuilder();
            CriteriaQuery<Skripsi> cq = cb.createQuery (Skripsi.class);
            Root<Skripsi> bok = cq.from(Skripsi.class);
            cq.select(bok);

            // Check if WHERE clause is not empty
            if (queryString.endsWith(" WHERE ")) {
                throw new IllegalArgumentException("No search criteria selected.");
            }

                TypedQuery<Skripsi> q = em.createQuery(cq);
                List<Skripsi> list = q.getResultList();
                Query query = em.createQuery(queryString);
                query.setParameter("searchTerm", "%" + searchTerm + "%");

                List<Skripsi> results = query.getResultList();
                Map<String,Object> parameter = new HashMap<>();
                parameter.put("querySearch", searchTerm);
                parameter.put("searchBy",selection);

                // Menyiapkan data untuk laporan
                List<Object[]> data = new ArrayList<>();
                for (Skripsi result : results) {
                    Object[] rowData = {
                        result.getId_skripsi(),
                        result.getJudul_skripsi(),
                        result.getKategori(),
                        result.getPenulis(),
                        result.getProdi(),
                        result.getTahun(),
                        result.getPembimbing(),
                        result.getJumlah_halaman(),};
                    data.add(rowData);
                }
                em.getTransaction().commit();
                em.close();
                emf.close();

            // Membuat sumber data untuk JasperReports dari data hasil pencarian

            JRBeanCollectionDataSource dataSource = new JRBeanCollectionDataSource(results);

            // Memuat file desain laporan (*.jrxml)
            JasperReport jasperReport = JasperCompileManager.compileReport(reportPath);
                JasperPrint print = JasperFillManager.fillReport(jasperReport, parameter, dataSource);
                JasperViewer viewer = new JasperViewer(print, false);
                viewer.setVisible(true);

        } catch (JRException ex) {
            Logger.getLogger(InputSkripsi.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_jButtonCetakActionPerformed

    private void jTableDataSkripsiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableDataSkripsiMouseClicked
        // TODO add your handling code here:
        int baris = jTableDataSkripsi.rowAtPoint(evt.getPoint());

        String Id_Skripsi = jTableDataSkripsi.getValueAt(baris, 0).toString();
        jTextFieldIDSkripsi.setText(Id_Skripsi);

        String Judul_Skripsi = jTableDataSkripsi.getValueAt(baris, 1).toString();
        jTextFieldJudulSkripsi.setText(Judul_Skripsi);
        
        String Kategori = jTableDataSkripsi.getValueAt(baris, 2).toString();
        jTextFieldKategori.setText(Kategori);
        
        String Penulis = jTableDataSkripsi.getValueAt(baris, 3).toString();
        jTextFieldPenulis.setText(Penulis);
        
        String Prodi = jTableDataSkripsi.getValueAt(baris, 4).toString();
        jTextFieldProdi.setText(Prodi);
        
        String Tahun = jTableDataSkripsi.getValueAt(baris, 5).toString();
        jTextFieldTahun.setText(Tahun);
        
        String Pembimbing = jTableDataSkripsi.getValueAt(baris, 6).toString();
        jTextFieldPembimbing.setText(Pembimbing);
        
        String JumlahHalaman = jTableDataSkripsi.getValueAt(baris, 7).toString();
        jTextFieldJumlahHalaman.setText(JumlahHalaman);
    }//GEN-LAST:event_jTableDataSkripsiMouseClicked

    private void jTextFieldKategoriKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldKategoriKeyTyped
        // TODO add your handling code here:
                JFrame frame = new JFrame("Search Filter Example");

                frame.setLayout(new BorderLayout());

                JTextField searchField = new JTextField();
                JTextField textField2 = new JTextField();
                DefaultListModel<String> listModel = new DefaultListModel<>();
                JList<String> resultList = new JList<>(listModel);

                EntityManagerFactory factory = Persistence.createEntityManagerFactory("UASPU");
                EntityManager em = factory.createEntityManager();

                searchField.getDocument().addDocumentListener(new DocumentListener() {
                    @Override
                    public void insertUpdate(DocumentEvent e) {
                        performSearch();
                    }

                    @Override
                    public void removeUpdate(DocumentEvent e) {
                        performSearch();
                    }

                    @Override
                    public void changedUpdate(DocumentEvent e) {
                        performSearch();
                    }

                    private void performSearch() {
                        listModel.clear();
                        String searchText = searchField.getText();

                        try {
                            em.getTransaction().begin();
                            Query query = em.createQuery("SELECT k.namaKategori FROM KategoriSkripsi k WHERE k.namaKategori LIKE :input");
                            query.setParameter("input", "%" + searchText + "%");

                            List<String> results = query.getResultList();
                            for (String result : results) {
                                listModel.addElement(result);
                            }
                            em.getTransaction().commit();
                        } catch (Exception ex) {
                            if (em.getTransaction().isActive()) {
                                em.getTransaction().rollback();
                            }
                            ex.printStackTrace();
                        }
                    }
                });

                resultList.addMouseListener(new MouseAdapter() {
                    @Override
                    public void mouseClicked(MouseEvent e) {
                        if (e.getClickCount() == 1) {
                            JList<String> list = (JList<String>) e.getSource();
                            if (list.getSelectedValue() != null) {
                                String selectedValue = list.getSelectedValue();
                                jTextFieldKategori.setText(selectedValue);
                            }
                        }
                    }
                });

                JScrollPane scrollPane = new JScrollPane(resultList);
                frame.add(searchField, BorderLayout.NORTH);
                frame.add(scrollPane, BorderLayout.CENTER);
                frame.add(textField2, BorderLayout.SOUTH);

                frame.setSize(300, 400);
                frame.setLocationRelativeTo(null);
                frame.setVisible(true);
           
    }//GEN-LAST:event_jTextFieldKategoriKeyTyped

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        // TODO add your handling code here:
        new InputBuku().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:
        new InputSkripsi().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        new PeminjamanBuku().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:
        new LaporanDataBuku().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        // TODO add your handling code here:
        new LaporanDataSkripsi().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel8MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InputSkripsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InputSkripsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InputSkripsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InputSkripsi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InputSkripsi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bg;
    private javax.swing.JButton jButtonCetak;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonSimpan;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JComboBox<String> jComboBoxKategori;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelIDSkripsi;
    private javax.swing.JLabel jLabelJudulSkripsi;
    private javax.swing.JLabel jLabelJumlahHalaman;
    private javax.swing.JLabel jLabelKategori;
    private javax.swing.JLabel jLabelPembimbing;
    private javax.swing.JLabel jLabelPenulis;
    private javax.swing.JLabel jLabelProdi;
    private javax.swing.JLabel jLabelTahun;
    private javax.swing.JLabel jLabelwelcomme;
    private javax.swing.JLabel jLabelwelcomme1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableDataSkripsi;
    private javax.swing.JTextField jTextFieldIDSkripsi;
    private javax.swing.JTextField jTextFieldJudulSkripsi;
    private javax.swing.JTextField jTextFieldJumlahHalaman;
    private javax.swing.JTextField jTextFieldKategori;
    private javax.swing.JTextField jTextFieldPembimbing;
    private javax.swing.JTextField jTextFieldPenulis;
    private javax.swing.JTextField jTextFieldProdi;
    private javax.swing.JTextField jTextFieldSearching;
    private javax.swing.JTextField jTextFieldTahun;
    // End of variables declaration//GEN-END:variables
}